name: Hadoop Project CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov flake8
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest --cov=src
        
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Build and verify images
      run: |
        # Test docker-compose build
        docker-compose build
        docker images | grep -E "(hadoop|namenode|datanode)"
        
  # ðŸ†• NOUVEAU JOB ANSIBLE DEPLOYMENT
  ansible-deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install ansible
        
    - name: Create logs directory
      run: mkdir -p logs
        
    - name: Deploy Hadoop cluster with simplified script
      run: |
        chmod +x scripts/simple-deploy.sh
        # Use clean deployment in CI
        ./scripts/simple-deploy.sh --clean
        
    - name: Run comprehensive health check with Ansible
      run: |
        # Run the detailed Ansible health check
        ansible-playbook -i ansible/inventory.ini ansible/health-check.yml -v
        
    - name: Verify critical services
      run: |
        # Double-check critical services are responding
        curl -f http://localhost:9870 || exit 1
        curl -f http://localhost:8501 || exit 1
        
    - name: Test HDFS operations
      run: |
        # Test basic HDFS operations
        docker exec namenode hdfs dfs -mkdir -p /test/ci
        echo "CI test $(date)" | docker exec -i namenode tee /tmp/ci-test.txt
        docker exec namenode hdfs dfs -put /tmp/ci-test.txt /test/ci/
        docker exec namenode hdfs dfs -cat /test/ci/ci-test.txt
        
    - name: Upload health report
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: health-report
        path: logs/health-report-*.md
        
    - name: Display final status
      run: |
        echo "ðŸŽ‰ Hadoop cluster deployed and tested successfully!"
        echo "ðŸ“Š Services accessible:"
        echo "â€¢ NameNode: http://localhost:9870"
        echo "â€¢ Dashboard: http://localhost:8501" 
        ./scripts/simple-deploy.sh --status