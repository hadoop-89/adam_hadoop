services:
  # === HADOOP CLUSTER ===
  namenode:
    build:
      context: ./hadoop-namenode
    container_name: namenode
    hostname: namenode
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    networks:
      - hadoop-net
    restart: always

  datanode1:
    build:
      context: ./hadoop-datanode
    container_name: datanode1
    hostname: datanode1
    ports:
      - "9864:9864"
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    networks:
      - hadoop-net
    depends_on:
      - namenode
    restart: always

  datanode2:
    build:
      context: ./hadoop-datanode
    container_name: datanode2
    hostname: datanode2
    ports:
      - "9865:9864"
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    networks:
      - hadoop-net
    depends_on:
      - namenode
    restart: always

  # === STREAMING ===
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - hadoop-net
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - hadoop-net
    restart: unless-stopped

  # === SPARK ===
  spark-master:
    image: bitnami/spark:3.5
    container_name: spark-master
    hostname: spark-master
    user: root
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_USER=root
      - HOME=/root
      - USER=root
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./spark-jobs:/opt/spark-jobs
    networks:
      - hadoop-net
    restart: unless-stopped
    command: >
      bash -c "
        pip install requests &&
        mkdir -p /root/.ivy2 &&
        /opt/bitnami/scripts/spark/entrypoint.sh /opt/bitnami/scripts/spark/run.sh
      "

  spark-worker:
    image: bitnami/spark:3.5
    container_name: spark-worker
    user: root
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_USER=root
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - HOME=/root
      - USER=root
    depends_on:
      - spark-master
    networks:
      - hadoop-net
    restart: unless-stopped
    command: >
      bash -c "
        pip install requests &&
        mkdir -p /root/.ivy2 &&
        /opt/bitnami/scripts/spark/entrypoint.sh /opt/bitnami/scripts/spark/run.sh
      "

  # === SCRAPER ===
  scraper:
    build:
      context: ./scraper
    container_name: scraper
    depends_on:
      - kafka
    networks:
      - hadoop-net
    restart: unless-stopped
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SCRAPE_INTERVAL=300

  # === MONITORING ===
  dashboard:
    build:
      context: ./dashboard
    container_name: dashboard
    ports:
      - "8501:8501"
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - HDFS_NAMENODE=hdfs://namenode:9000
    depends_on:
      - spark-master
    networks:
      - hadoop-net
    restart: unless-stopped

  # === DATA LOADER (optionnel) ===
  data-loader:
    build:
      context: ./data-loader
    container_name: data-loader
    hostname: data-loader
    networks:
      - hadoop-net
    restart: "no"
    environment:
      - HDFS_NAMENODE=namenode:9000

  # === HIVE SERVICES (VERSION CORRIGÉE) ===
  hive-metastore:
    image: apache/hive:3.1.3
    container_name: hive-metastore
    hostname: hive-metastore
    user: root
    environment:
      - SERVICE_NAME=metastore
      - DB_DRIVER=derby
    volumes:
      - ./hive-config/hive-site.xml:/opt/hive/conf/hive-site.xml:ro
    ports:
      - "9083:9083"
    depends_on:
      - namenode
    networks:
      - hadoop-net
    restart: unless-stopped
    command: >
      bash -c "
        echo 'Attente du NameNode...' &&
        sleep 45 &&
        echo 'Nettoyage base Derby...' &&
        rm -rf /tmp/hive_metastore/* &&
        mkdir -p /tmp/hive_metastore &&
        chmod 777 /tmp/hive_metastore &&
        echo 'Initialisation schéma Derby...' &&
        /opt/hive/bin/schematool -dbType derby -initSchema &&
        echo 'Démarrage Metastore...' &&
        /entrypoint.sh
      "

  hive-server:
    image: apache/hive:3.1.3
    container_name: hive-server
    hostname: hive-server
    user: root
    environment:
      - SERVICE_NAME=hiveserver2
      - DB_DRIVER=derby
    volumes:
      - ./hive-config/hive-site.xml:/opt/hive/conf/hive-site.xml:ro
      - ./hive-config/init-tables.sql:/tmp/init-tables.sql:ro
    ports:
      - "10000:10000"
      - "10002:10002"
    depends_on:
      - hive-metastore
    networks:
      - hadoop-net
    restart: unless-stopped
    command: >
      bash -c "
        echo 'Attente du Metastore...' &&
        sleep 75 &&
        timeout 60 bash -c 'while ! nc -z hive-metastore 9083; do sleep 5; done' &&
        echo 'Démarrage HiveServer2...' &&
        /entrypoint.sh &
        SERVER_PID=\$! &&
        sleep 45 &&
        echo 'Initialisation tables...' &&
        beeline -u jdbc:hive2://localhost:10000 -f /tmp/init-tables.sql &&
        wait \$SERVER_PID
      "

volumes:
  hadoop_namenode:
  hadoop_datanode1:
  hadoop_datanode2:
  hive_metastore_data:

networks:
  hadoop-net:
    driver: bridge